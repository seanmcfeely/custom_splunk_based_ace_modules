[analysis_module_cisco_radius_vpn_user]
;module=saq.modules.custom
module=saq.modules.splunkmods.cisco
class=SplunkCiscoRADIUS_VPNAnalyzer
enabled=no
question=Was this user logged into VPN at this time?
summary=User VPN Analysis
api=splunk
use_index_time=no
max_result_count=10
wide_duration_before = 24:00:00
wide_duration_after = 12:00:00
narrow_duration_before = 12:00:00
narrow_duration_after = 12:00:00
query=index=radius <O_TIMESPEC> User_Name="<O_VALUE>" ( Acct_Status_Type=Stop OR Acct_Status_Type=Start ) | fields User_Name Acct_Status_Type Framed_IP_Address Calling_Station_ID Acct_Session_Time | sort _time


; old bits below ;
[analysis_module_squid]
module = saq.modules.squid
class = SquidProxyAnalyzerByDestination
enabled = no
semaphore = splunk
; the maximum number of proxy requests to obtain from splunk
max_request_count = 10
; tighter time around splunk searches
relative_duration_before = 00:15:00
relative_duration_after = 00:15:00

[analysis_module_dns_request_analysis_v1]
module = saq.modules.dns
class = DNSRequestAnalyzer_v1
enabled = yes
semaphore = splunk
max_request_count = 50
max_source_count = 6
relative_duration_before = 00:01:00
relative_duration_after = 00:01:00
baseline_relative_duration_before = 24:00:00
baseline_relative_duration_after = 02:00:00


[analysis_module_bluecoat_analysis_by_dst_v1]
module = saq.modules.bluecoat
class = BluecoatProxyAnalyzerByDestination_v1
enabled = yes
semaphore = splunk
exclude_proxy = observable_group:internal
; the maximum number of proxy requests to obtain from splunk
max_request_count = 50
; if there are less than X users requesting the resource in the timeframe then we add the users as observables
max_user_count = 6
; tighter time around splunk searches
relative_duration_before = 00:15:00
relative_duration_after = 00:15:00
; 24 hour baseline period
baseline_relative_duration_before = 24:00:00
baseline_relative_duration_after = 02:00:00
; a CSV file that maps bluecoat categories to tags
category_tag_csv_path = etc/bluecoat_category_tagging.csv

[analysis_module_bluecoat_analysis_by_src_v1]
module = saq.modules.bluecoat
class = BluecoatProxyAnalyzerBySource_v1
enabled = yes
semaphore = splunk
; the maximum number of proxy requests to obtain from splunk
max_request_count = 1000
; tighter time around splunk searches
relative_duration_before = 00:01:00
relative_duration_after = 00:01:00

[analysis_module_exploit_kit_proxy_analyzer]
module = saq.modules.bluecoat
class = ExploitKitProxyAnalyzer
enabled = yes
semaphore = splunk
exclude_internal = observable_group:internal
; the maximum number of proxy requests to obtain from splunk
max_request_count = 10
; tighter time around splunk searches
relative_duration_before = 00:01:00
relative_duration_after = 00:01:00


[analysis_module_dlp_process]
module = saq.modules.dlp
class = DLPProcessAnalyzer
enabled = yes
semaphore = splunk
; we go a bit wider for DLP Process searches
relative_duration_before = 24:00:00
relative_duration_after = 02:00:00
; go pretty far back for the baseline
baseline_relative_duration_before = 720:00:00
baseline_relative_duration_after = 02:00:00
; this one takes a long time to run so don't go back too far (7 days should be good)
global_baseline_relative_duration_before = 168:00:00
global_baseline_relative_duration_after = 02:00:00

[analysis_module_email_history_analyzer_v2]
module = saq.modules.email
class = EmailHistoryAnalyzer_v2
enabled = yes
semaphore = splunk

; we go back a bit to try to catch phish sitting idle in the inbox
relative_duration_before = 72:00:00
relative_duration_after = 02:00:00

; the following is a list of comma-separated domains that are aliased together
; so if a user's email address domain matches on of these then the entire group is searched with "OR" clause
; for example, john@example.com would search for john@teamexample.onmicrosoft.com OR john@example.com
; each of these configuration items must start with map_ at the beginning of the name
;map_company_1 = teamcompany.onmicrosoft.com,company.com
